(use-modules (gnu))

(use-service-modules networking ssh web
                     certbot
                     version-control
                     cgit
                     )
(use-package-modules bootloaders ssh version-control certs
                     tls ;; certbot
                     )

(define (cert-path host file)
  (format #f "/etc/letsencrypt/live/~a/~a.pem" host (symbol->string file)))

(define %certbot-nginx-deploy-hook
  (program-file
   "nginx-deploy-hook"
   #~(let ((pid (call-with-input-file "/var/run/nginx/pid" read)))
       (kill pid SIGHUP))))

(define %website-host
  (operating-system
   (host-name "Guix-VPS")
   (timezone "America/Chicago")
   (bootloader (bootloader-configuration
                (bootloader grub-bootloader)
                (target "/dev/vda")
                (terminal-outputs '(console))))
   (file-systems (cons (file-system
                        (mount-point "/")
                        (device
                         (uuid "ba2525e5-2660-4627-9e9a-97ac853b992e"
                               'ext4))
                        (type "ext4"))
                       %base-file-systems))
   (packages
    (append (list certbot
                  nss-certs)
            %base-packages))
   (services
    (append (list (service dhcp-client-service-type)
                  (service openssh-service-type
                           (openssh-configuration
                            (openssh openssh-sans-x)
                            (password-authentication? #false)
                            (permit-root-login #t)
                            (authorized-keys
                             ;; Authorise our SSH key.
                             ;; SSH access must be able to access/elevate to user in config list at bottom
                             `(("root" ,(local-file "/home/karl/.ssh/id_rsa.pub"))))))
                  )
            (modify-services %base-services
                             (guix-service-type config =>
                                                (guix-configuration
                                                 (inherit config)
                                                 (authorized-keys
                                                  ;; Guix signing key generated by Guix in /etc/guix/
                                                  (append (list (local-file "/home/karl/guix/guix-coordinator.pub"))
                                                          %default-authorized-guix-keys)))))))))
%website-host
;; (list (machine
;;        (operating-system %website-host)
;;        (environment managed-host-environment-type)
;;        (configuration (machine-ssh-configuration
;;                        ;; IP or DNS-resolved address of machine(s) to manage
;;                        (host-name "karl.hallsby.com")
;;                        (system "x86_64-linux")
;;                        ;; SSH host key of system being configured
;;                        (host-key "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIMm62B6GxxU0SH9OFU14cg249liVQaQRrS6DM7n9ZRBQ")
;;                        (user "root")))))
