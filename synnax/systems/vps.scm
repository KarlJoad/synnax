(use-service-modules networking ssh web cuirass)
(use-package-modules bootloaders ssh version-control certs)

;; NOTE: If using SSH-protected channels, MUST have nss-certs in globally
;; available packages!
(define %cuirass-specification
  #~(list (specification
           (name "test-hello-channel")
           (build '(channels test-hello))
           (channels
            (cons (channel
                   (name 'test-hello)
                   (url "https://git.savannah.gnu.org/git/hello.git"))
                  %default-channels))
           (period (* 4 60)))
          (specification
           (name "test-guix-hello-timer")
           (build 'hello)
           (period (* 4 60)))))

(define %system
  (operating-system
   (host-name "Guix-VPS")
   (timezone "America/Chicago")
   (bootloader (bootloader-configuration
                (bootloader grub-bootloader)
                (target "/dev/sda")
                (terminal-outputs '(console))))
   (file-systems (cons (file-system
                        (mount-point "/")
                        (device
                         (uuid "3316cd52-a3aa-4410-a5b9-efaaa65992cd"
                               'ext4))
                        (type "ext4"))
                       %base-file-systems))
   (packages
    (append (list git ;; Not strictly needed
                  nss-certs)
            %base-packages))
   (services
    (append (list (service dhcp-client-service-type)
                  (service openssh-service-type
                           (openssh-configuration
                            (openssh openssh-sans-x)
                            (password-authentication? #false)
                            (permit-root-login #t)
                            (authorized-keys
                             ;; Authorise our SSH key.
                             ;; SSH access must be able to access/elevate to user in config list at bottom
                             `(("root" ,(local-file "/home/karl/.ssh/id_rsa.pub"))))))
                  (service cuirass-service-type
                           (cuirass-configuration
                            (specifications %cuirass-specification)
                            (host "0.0.0.0"))))
            (modify-services %base-services
                             (guix-service-type config =>
                                                (guix-configuration
                                                 (inherit config)
                                                 (authorized-keys
                                                  ;; Guix signing key generated by Guix in /etc/guix/
                                                  (append (list (local-file "/home/karl/guix/guix-coordinator.pub"))
                                                          %default-authorized-guix-keys)))))))))

(list (machine
       (operating-system %system)
       (environment managed-host-environment-type)
       (configuration (machine-ssh-configuration
                       ;; IP or DNS-resolved address of machine(s) to manage
                       (host-name "192.168.122.52")
                       (system "x86_64-linux")
                       ;; SSH host key of system being configured
                       (host-key "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIMm62B6GxxU0SH9OFU14cg249liVQaQRrS6DM7n9ZRBQ")
                       (user "root")))))
